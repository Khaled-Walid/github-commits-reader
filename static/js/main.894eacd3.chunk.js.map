{"version":3,"sources":["hooks/useAuth.js","config.js","pages/Login.jsx","pages/Logout.jsx","hocs/withRequireLogin.js","hooks/useRestrictToLoggedIn.js","pages/Repos.jsx","git.js","pages/Repo.jsx","AppRouter.js","pages/LoginCallback.jsx","App.js","reportWebVitals.js","index.js"],"names":["AuthContext","createContext","AuthContextProvider","children","initialOauthState","localStorage","getItem","initialOauthAccessToken","useState","oauthState","setOauthState","value","oauthAccessToken","setOauthAccessToken","Provider","useAuth","useContext","history","useHistory","startLogin","useCallback","clientId","redirectUrl","random","nanoid","setItem","removeItem","params","URLSearchParams","client_id","redirect_url","scope","state","window","location","toString","completeLogin","accessToken","origin","pathname","logout","push","loggedIn","clientSecret","baseUrl","Login","handleClick","to","Button","variant","color","onClick","Logout","withRequireLogin","Component","props","useLayoutEffect","useRestrictToLoggedIn","useStyles","makeStyles","root","minWidth","marginTop","backgroundColor","container","display","flexDirection","textAlign","text","username","setUsername","repos","setRepos","getUsername","a","fetch","headers","accept","Authorization","response","json","login","getUserRepos","items","map","item","id","name","fullName","full_name","cloneUrl","clone_url","useEffect","getData","classes","rendererdRepos","repo","className","Typography","component","Container","fs","FS","http","webHttp","corsProxy","createCloneUrl","reponame","li","useParams","cloning","setCloning","loading","setLoading","commits","setCommits","dir","promises","stat","mkdir","git","clone","url","log","commitsResult","extracted","commitResult","sha","oid","message","commit","author","loadCommits","commitsElements","email","Date","timestamp","commitsList","goBack","AppRouter","buttonToRender","maxWidth","Card","CardContent","exact","path","CardActions","endpoint","LoginCallback","Object","fromEntries","useLocation","search","entries","error","setError","hasCorsError","setHasCorsError","shouldFixUrl","continueLogin","method","body","JSON","stringify","client_secret","code","status","indexOf","setTimeout","error_description","access_token","hash","title","src","width","height","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.894eacd3.chunk.js","sourcesContent":["import { createContext, useState, useCallback, useContext } from 'react';\r\nimport { useHistory } from 'react-router-dom';\r\nimport { nanoid } from 'nanoid';\r\n\r\nconst AuthContext = createContext();\r\n\r\nexport function AuthContextProvider({ children }) {\r\n  const initialOauthState = localStorage.getItem('oauthState');\r\n  const initialOauthAccessToken = localStorage.getItem('oauthAccessToken');\r\n\r\n  const [oauthState, setOauthState] = useState(initialOauthState);\r\n  const [oauthAccessToken, setOauthAccessToken] = useState(initialOauthAccessToken);\r\n  const value = { oauthState, oauthAccessToken, setOauthState, setOauthAccessToken };\r\n\r\n  return (\r\n    <AuthContext.Provider value={value}>\r\n      {children}\r\n    </AuthContext.Provider>\r\n  );\r\n}\r\n\r\nexport function useAuth() {\r\n  const { oauthState, oauthAccessToken, setOauthState, setOauthAccessToken } = useContext(AuthContext);\r\n  const history = useHistory();\r\n\r\n  const startLogin = useCallback(({ clientId, redirectUrl }) => {\r\n    const random = nanoid();\r\n    localStorage.setItem('oauthState', random);\r\n    localStorage.removeItem('oauthAccessToken');\r\n    setOauthState(random);\r\n    setOauthAccessToken(null);\r\n\r\n    const base = 'https://github.com/login/oauth/authorize?';\r\n    const params = new URLSearchParams({\r\n      client_id: clientId,\r\n      redirect_url: redirectUrl,\r\n      scope: 'repo,read:user',\r\n      state: random,\r\n    });\r\n    window.location = base + params.toString();\r\n  }, [setOauthState, setOauthAccessToken]);\r\n\r\n  const completeLogin = useCallback(accessToken => {\r\n    localStorage.removeItem('oauthState');\r\n    localStorage.setItem('oauthAccessToken', accessToken);\r\n    setOauthState(null);\r\n    setOauthAccessToken(accessToken);\r\n\r\n    window.location = window.location.origin + window.location.pathname;\r\n  }, [setOauthState, setOauthAccessToken]);\r\n\r\n  const logout = useCallback(() => {\r\n    localStorage.removeItem('oathState');\r\n    localStorage.removeItem('oauthAccessToken');\r\n    setOauthState(null);\r\n    setOauthAccessToken(null);\r\n\r\n    history.push('/');\r\n  }, [setOauthState, setOauthAccessToken, history]);\r\n\r\n  const loggedIn = !!oauthAccessToken;\r\n\r\n  return {\r\n    oauthState,\r\n    oauthAccessToken,\r\n    startLogin,\r\n    completeLogin,\r\n    logout,\r\n    loggedIn,\r\n  };\r\n}\r\n","export const clientId = '016124ae365c55d1ee65';\r\n\r\nexport const clientSecret = '1ed9a75880564fcea3c6194d8fabe0d6b63188d9';\r\n\r\nexport const baseUrl = 'https://khaled-walid.github.io/github-commits-reader';\r\n","import { useAuth } from \"../hooks/useAuth\";\r\nimport { Redirect } from \"react-router-dom\";\r\nimport { clientId, baseUrl } from \"../config\";\r\nimport { useCallback } from \"react\";\r\nimport { Button } from '@material-ui/core';\r\n\r\n\r\nexport default function Login() {\r\n  const { loggedIn, startLogin } = useAuth();\r\n\r\n  const handleClick = useCallback(\r\n    () => startLogin({ clientId, redirectUrl: baseUrl + \"/#/login-callback\" }),\r\n    [startLogin]\r\n  );\r\n\r\n  if (loggedIn) {\r\n    return <Redirect to=\"/\" />;\r\n  }\r\n\r\n  return <Button variant=\"contained\" color=\"primary\" onClick={handleClick}>Login</Button>;\r\n}\r\n","import { useAuth } from '../hooks/useAuth';\r\nimport { Button } from '@material-ui/core';\r\n\r\nexport default function Logout() {\r\n  const { logout } = useAuth();\r\n\r\n  return <Button variant=\"contained\" color=\"secondary\" onClick={logout}>Logout</Button>;\r\n}\r\n","import useRestrictToLoggedIn from '../hooks/useRestrictToLoggedIn';\r\n\r\nexport default function withRequireLogin(Component) {\r\n  return function(props) {\r\n    useRestrictToLoggedIn();\r\n    return <Component {...props} />;\r\n  };\r\n}\r\n","import { useHistory } from 'react-router-dom';\r\nimport { useAuth } from './useAuth';\r\nimport { useLayoutEffect } from 'react';\r\n\r\nexport default function useRestrictToLoggedIn() {\r\n  const { loggedIn } = useAuth();\r\n  const history = useHistory();\r\n\r\n  useLayoutEffect(() => {\r\n    if (!loggedIn) {\r\n      history.push('/login');\r\n    }\r\n  }, [loggedIn, history]);\r\n}\r\n","import { useCallback, useEffect, useState } from \"react\";\r\nimport { useAuth } from \"../hooks/useAuth\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport withRequireLogin from \"../hocs/withRequireLogin\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport { Button, Container } from \"@material-ui/core\";\r\n\r\nconst useStyles = makeStyles({\r\n  root: {\r\n    minWidth: 275,\r\n    marginTop: \"15px\",\r\n    backgroundColor: \"#999393\",\r\n  },\r\n  container: {\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    textAlign: \"center\",\r\n  },\r\n  text: {\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    textAlign: \"center\"\r\n  },\r\n});\r\n\r\nfunction Repos() {\r\n  const { oauthAccessToken, loggedIn } = useAuth();\r\n\r\n  const [username, setUsername] = useState(null);\r\n  const [repos, setRepos] = useState(null);\r\n\r\n  const getUsername = useCallback(async () => {\r\n    const response = await fetch(\"https://api.github.com/user\", {\r\n      headers: {\r\n        accept: \"application/json\",\r\n        Authorization: \"token \" + oauthAccessToken,\r\n      },\r\n    });\r\n    const json = await response.json();\r\n    return json.login;\r\n  }, [oauthAccessToken]);\r\n\r\n  const getUserRepos = useCallback(\r\n    async (username) => {\r\n      const response = await fetch(\r\n        \"https://api.github.com/search/repositories?q=user:\" + username,\r\n        {\r\n          headers: {\r\n            accept: \"application/json\",\r\n            Authorization: \"token \" + oauthAccessToken,\r\n          },\r\n        }\r\n      );\r\n      const json = await response.json();\r\n      return json.items.map((item) => ({\r\n        id: item.id,\r\n        name: item.name,\r\n        fullName: item.full_name,\r\n        cloneUrl: item.clone_url,\r\n      }));\r\n    },\r\n    [oauthAccessToken]\r\n  );\r\n\r\n  useEffect(() => {\r\n    async function getData() {\r\n      const username = await getUsername();\r\n      const repos = await getUserRepos(username);\r\n      setUsername(username);\r\n      setRepos(repos);\r\n    }\r\n\r\n    if (loggedIn) {\r\n      getData();\r\n    }\r\n  }, [getUserRepos, getUsername, loggedIn]);\r\n  const classes = useStyles();\r\n  const history = useHistory();\r\n  const rendererdRepos =\r\n    repos &&\r\n    repos.map((repo) => {\r\n      return (\r\n        <Button\r\n          className={classes.root}\r\n          variant=\"outlined\"\r\n          key={repo.id}\r\n          onClick={() => {history.push(`/${repo.fullName}`)}}\r\n        >\r\n          {repo.name}\r\n        </Button>\r\n      );\r\n    });\r\n\r\n  const renderAll = repos ? (\r\n    <>\r\n      <Typography className={classes.text} variant=\"h5\" component=\"h2\">\r\n        Username: {username} <br />\r\n        Repositories:\r\n      </Typography>\r\n      <Container className={classes.container}>{rendererdRepos}</Container>\r\n    </>\r\n  ) : (\r\n    \"Loading...\"\r\n  );\r\n\r\n  return renderAll;\r\n}\r\n\r\nexport default withRequireLogin(Repos);\r\n","import FS from '@isomorphic-git/lightning-fs';\r\nimport webHttp from 'isomorphic-git/http/web';\r\n\r\nexport const fs = new FS('commit-renamer');\r\n\r\nexport const http = webHttp;\r\n\r\nexport const corsProxy = 'https://cors.isomorphic-git.org';\r\n","import { useParams, useHistory } from \"react-router-dom\";\r\nimport { useEffect, useState } from \"react\";\r\nimport { fs, http, corsProxy } from \"../git\";\r\nimport git from \"isomorphic-git\";\r\nimport withRequireLogin from \"../hocs/withRequireLogin\";\r\nimport { useAuth } from \"../hooks/useAuth\";\r\nimport { Typography } from \"@material-ui/core\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport { Button } from \"@material-ui/core\";\r\n\r\nfunction createCloneUrl(accessToken, username, reponame) {\r\n  return `https://${accessToken}@github.com/${username}/${reponame}.git`;\r\n}\r\nconst useStyles = makeStyles({\r\n  li: {\r\n    color: \"white\",\r\n  },\r\n});\r\nfunction Repo() {\r\n  const { oauthAccessToken } = useAuth();\r\n  const { username, reponame } = useParams();\r\n  const [cloning, setCloning] = useState(true);\r\n  const [loading, setLoading] = useState(true);\r\n  const [commits, setCommits] = useState(null);\r\n\r\n  const dir = `/${username}/${reponame}`;\r\n  useEffect(() => {\r\n    async function clone() {\r\n      try {\r\n        await fs.promises.stat(\"/\" + username);\r\n      } catch {\r\n        await fs.promises.mkdir(\"/\" + username);\r\n      }\r\n\r\n      try {\r\n        await fs.promises.stat(dir);\r\n      } catch {\r\n        await git.clone({\r\n          fs,\r\n          http,\r\n          corsProxy,\r\n          dir,\r\n          url: createCloneUrl(oauthAccessToken, username, reponame),\r\n        });\r\n      }\r\n\r\n      setCloning(false);\r\n    }\r\n\r\n    clone();\r\n  }, [oauthAccessToken, reponame, username, dir]);\r\n\r\n  useEffect(() => {\r\n    async function loadCommits() {\r\n      const commitsResult = await git.log({\r\n        fs,\r\n        dir,\r\n      });\r\n\r\n      const extracted = commitsResult.map((commitResult) => ({\r\n        sha: commitResult.oid,\r\n        message: commitResult.commit.message,\r\n        author: commitResult.commit.author,\r\n      }));\r\n      setCommits(extracted);\r\n      setLoading(false);\r\n    }\r\n\r\n    if (!cloning) {\r\n      loadCommits();\r\n    }\r\n  }, [cloning, dir]);\r\n\r\n  const classes = useStyles();\r\n\r\n  const commitsElements =\r\n    commits &&\r\n    commits.map((commit) => (\r\n      <li key={commit.sha}>\r\n        <Typography className={classes.li}>\r\n          Message: {commit.message} <br />\r\n          User: {commit.author.name} <br />\r\n          E-mail: {commit.author.email} <br />\r\n          Date: {new Date(commit.author.timestamp * 1000).toString()}\r\n        </Typography>\r\n      </li>\r\n    ));\r\n\r\n  const commitsList = commitsElements ? <ul>{commitsElements}</ul> : null;\r\n  const history = useHistory();\r\n\r\n  return loading ? (\r\n    \"Loading...\"\r\n  ) : (\r\n    <>\r\n      {commitsList}\r\n      <Button\r\n        variant=\"contained\"\r\n        color=\"default\"\r\n        onClick={() => {\r\n          history.goBack();\r\n        }}\r\n      >\r\n        Back\r\n      </Button>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default withRequireLogin(Repo);\r\n","import { useAuth } from \"./hooks/useAuth\";\r\nimport Login from \"./pages/Login\";\r\nimport Logout from \"./pages/Logout\";\r\nimport Repos from \"./pages/Repos\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Container from \"@material-ui/core/Container\";\r\nimport Card from \"@material-ui/core/Card\";\r\nimport CardActions from \"@material-ui/core/CardActions\";\r\nimport CardContent from \"@material-ui/core/CardContent\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport Repo from \"./pages/Repo\";\r\nimport { Route, Switch } from \"react-router-dom\";\r\n\r\n\r\nconst useStyles = makeStyles({\r\n  root: {\r\n    minWidth: 275,\r\n    marginTop: \"20%\",\r\n    backgroundColor: \"#646464\",\r\n  },\r\n});\r\n\r\nexport default function AppRouter() {\r\n  const { loggedIn } = useAuth();\r\n  const classes = useStyles();\r\n  const buttonToRender = loggedIn ? <Logout /> : <Login />;\r\n  return (\r\n    <>\r\n      <Container maxWidth=\"sm\">\r\n        <Card className={classes.root} variant=\"outlined\">\r\n          <CardContent>\r\n            {loggedIn ? (\r\n              <Switch>\r\n                <Route exact path=\"/\">\r\n                  <Repos />\r\n                </Route>\r\n                <Route exact path=\"/:username/:reponame\">\r\n                  <Repo />\r\n                </Route>\r\n              </Switch>\r\n            ) : (\r\n              <Typography variant=\"h5\" component=\"h2\">\r\n                You are not logged in!\r\n              </Typography>\r\n            )}\r\n          </CardContent>\r\n          <CardActions >{buttonToRender}</CardActions>\r\n        </Card>\r\n      </Container>\r\n    </>\r\n  );\r\n}\r\n","import { useEffect, useState } from 'react';\r\nimport { Redirect, useLocation } from 'react-router-dom';\r\nimport { clientId, clientSecret, baseUrl } from '../config';\r\nimport { useAuth } from '../hooks/useAuth';\r\n\r\nconst endpoint = 'https://cors-anywhere.herokuapp.com/https://github.com/login/oauth/access_token'\r\n\r\nexport default function LoginCallback() {\r\n  const params = Object.fromEntries(new URLSearchParams(useLocation().search).entries());\r\n  const { loggedIn, oauthState, completeLogin } = useAuth();\r\n  const [error, setError] = useState(null);\r\n  const [hasCorsError, setHasCorsError] = useState(false);\r\n\r\n  const shouldFixUrl = !!window.location.search;\r\n\r\n  useEffect(() => {\r\n    async function continueLogin() {\r\n      try {\r\n        const response = await fetch(endpoint, {\r\n          method: 'POST',\r\n          headers: {\r\n            'Content-Type': 'application/json',\r\n            accept: 'application/json',\r\n          },\r\n          body: JSON.stringify({\r\n            client_id: clientId,\r\n            client_secret: clientSecret,\r\n            code: params.code,\r\n            redirect_url: baseUrl + '/#/login-callback',\r\n          }),\r\n        });\r\n\r\n        if (response.status === 403) {\r\n          const responseText = await response.text();\r\n          if (responseText.indexOf('/corsdemo')) {\r\n            setHasCorsError(true);\r\n            setTimeout(continueLogin, 1000);\r\n            return;\r\n          }\r\n        }\r\n\r\n        setHasCorsError(false);\r\n\r\n        const json = await response.json();\r\n\r\n        if (json.error) {\r\n          setError(json.error_description);\r\n        } else {\r\n          completeLogin(json.access_token);\r\n        }\r\n      } catch (e) {\r\n        setError(e.toString());\r\n      }\r\n    }\r\n\r\n    if (!shouldFixUrl) {\r\n      if (params.error) {\r\n        setError(params.error_description);\r\n      } else if (!loggedIn && oauthState && params.state === oauthState && params.code) {\r\n        continueLogin();\r\n      }\r\n    }\r\n  }, [shouldFixUrl, loggedIn, oauthState, completeLogin, params.state, params.error, params.error_description, params.code]);\r\n\r\n  if (shouldFixUrl) {\r\n    const { origin, pathname, hash, search } = window.location;\r\n    window.location = origin + pathname + hash + search;\r\n    return null;\r\n  }\r\n  \r\n  if (loggedIn) {\r\n    return <Redirect to=\"/\" />;\r\n  }\r\n\r\n  if (params.state !== oauthState || !oauthState) {\r\n    return 'Wrong state';\r\n  }\r\n\r\n  if (hasCorsError) {\r\n    return (\r\n      <div>\r\n        Please click on the button below\r\n        <iframe title=\"cors-anywhere\" src=\"https://cors-anywhere.herokuapp.com/\" width=\"800\" height=\"600\" />\r\n      </div>\r\n    );\r\n  }\r\n\r\n  if (error) {\r\n    return error;\r\n  }\r\n\r\n  return 'Loading...';\r\n}\r\n","import { HashRouter as Router } from \"react-router-dom\";\r\nimport { AuthContextProvider } from \"./hooks/useAuth\";\r\nimport AppRouter from \"./AppRouter\";\r\nimport { Route, Switch } from \"react-router-dom\";\r\nimport LoginCallback from \"./pages/LoginCallback\";\r\n\r\nfunction App() {\r\n  return (\r\n    <AuthContextProvider>\r\n      <Router>\r\n        <Switch>\r\n          <Route exact path=\"/login-callback\">\r\n            <LoginCallback />\r\n          </Route>\r\n          <Route path=\"/\">\r\n            <AppRouter />\r\n          </Route>\r\n        </Switch>\r\n      </Router>\r\n    </AuthContextProvider>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './styles/style.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}